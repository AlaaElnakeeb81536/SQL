with maxeachday as (
SELECT 
    submission_date,
    hacker_id,
    RANK() OVER (PARTITION BY submission_date ORDER BY count DESC, hacker_id) AS rank
FROM  (
    SELECT 
        submission_date,
        hacker_id,
        COUNT(submission_id) AS count
    FROM 
        Submissions
    GROUP BY 
        submission_date, hacker_id
) xx 
),rankoverday as (
    select submission_date, hacker_id ,
    dense_rank () over( order by submission_date ) as dayrank
    from submissions
), attendance_check AS (
    SELECT 
        r1.submission_date, 
        r1.hacker_id,
        r1.dayrank,
    case when r1.submission_date='2016-03-01' then 1 
      else 1+(select count(distinct a.submission_date) 
       from Submissions a
      where a.hacker_id = r1.hacker_id and a.submission_date<r1.submission_date )
      end as day_prev
    FROM  rankoverday r1
) ,  finall as
(
select submission_date,
count(distinct hacker_id) as HackerCnt
from attendance_check
where day_prev = dayrank
group by submission_date

)
SELECT 
    f.submission_date,
    f.HackerCnt,
    m.hacker_id,
    h.name
FROM finall f
INNER JOIN maxeachday m
    ON f.submission_date = m.submission_date
INNER JOIN Hackers h
    ON h.hacker_id = m.hacker_id
WHERE m.rank = 1
ORDER BY f.submission_date;
